name: Create Release from release.json

on:
  push:
    branches:
      - main  # Trigger on any push to the main branch

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          echo "${{ secrets.WORKFLOW }}" | gh auth login --with-token

      - name: Read release.json
        id: read_json
        run: |
          RELEASE_FILE="release.json"
          VERSION=$(jq -r '.version' $RELEASE_FILE)
          DESCRIPTION=$(jq -r '.description' $RELEASE_FILE)
          FEATURES=$(jq -r '.features[]?' $RELEASE_FILE | sed 's/^/- /')
          BUG_FIXES=$(jq -r '."bug-fix"[]?' $RELEASE_FILE | sed 's/^/- /')

          # Initialize RELEASE_NOTES with the description
          RELEASE_NOTES="${DESCRIPTION}\n\n"

          # Conditionally add New Features section if FEATURES is not empty
          if [ -n "$FEATURES" ]; then
            RELEASE_NOTES+="## New Features\n${FEATURES}\n\n"
          fi

          # Conditionally add Bug Fixes section if BUG_FIXES is not empty
          if [ -n "$BUG_FIXES" ]; then
            RELEASE_NOTES+="## Bug Fixes\n${BUG_FIXES}\n\n"
          fi

          # Check if version contains a pre-release identifier
          if [[ "$VERSION" == *"-alpha"* || "$VERSION" == *"-beta"* || "$VERSION" == *"-rc"* ]]; then
            IS_PRERELEASE=true
          else
            IS_PRERELEASE=false
          fi

          # Export variables safely for multi-line content
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo -e "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "IS_PRERELEASE=$IS_PRERELEASE" >> $GITHUB_ENV

      - name: Check if release already exists
        id: check_release
        run: |
          if gh release view "$VERSION" > /dev/null 2>&1; then
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        if: env.RELEASE_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW }}  # GitHub PAT token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}  # Set to true if version is pre-release based on VERSION
